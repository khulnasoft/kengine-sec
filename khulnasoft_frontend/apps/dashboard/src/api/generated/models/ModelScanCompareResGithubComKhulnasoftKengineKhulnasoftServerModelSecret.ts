/* tslint:disable */
/* eslint-disable */
/**
 * Khulnasoft Kengine
 * Khulnasoft Runtime API provides programmatic control over Khulnasoft microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.
 *
 * The version of the OpenAPI document: v2.2.1
 * Contact: community@khulnasoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelSecret } from './ModelSecret';
import {
    ModelSecretFromJSON,
    ModelSecretFromJSONTyped,
    ModelSecretToJSON,
} from './ModelSecret';

/**
 * 
 * @export
 * @interface ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret
 */
export interface ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret {
    /**
     * 
     * @type {Array<ModelSecret>}
     * @memberof ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret
     */
    _new: Array<ModelSecret> | null;
}

/**
 * Check if a given object implements the ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret interface.
 */
export function instanceOfModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "_new" in value;

    return isInstance;
}

export function ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecretFromJSON(json: any): ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret {
    return ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecretFromJSONTyped(json, false);
}

export function ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecretFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_new': (json['new'] === null ? null : (json['new'] as Array<any>).map(ModelSecretFromJSON)),
    };
}

export function ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecretToJSON(value?: ModelScanCompareResGithubComKhulnasoftKengineKhulnasoftServerModelSecret | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'new': (value._new === null ? null : (value._new as Array<any>).map(ModelSecretToJSON)),
    };
}

